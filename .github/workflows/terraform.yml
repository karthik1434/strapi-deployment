name: Strapi Terraform Deployment

on:
  workflow_run:
    workflows: ["Strapi CI Pipeline"]
    branches: [ "main" ]
    types:
      - completed

env:
  ECR_REPOSITORY: strapi-app-karthik
  AWS_REGION: us-east-1 
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        id: get-account-id
        run: |
          echo "account_id=$(aws sts get-caller-identity --query 'Account' --output text)" >> $GITHUB_OUTPUT



      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin \
          118273046134.dkr.ecr.us-east-1.amazonaws.com/strapi-app-karthik

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Get image tag from triggering workflow
        id: get-image-tag
        run: |
          IMAGE_TAG=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
          -H "Accept: application/vnd.github.v3+json" \
          ${{ github.event.workflow_run.url }} | \
          jq -r '.outputs.image_tag')
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "Using image tag: $IMAGE_TAG"
          
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
          -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"